Fried Chicken :: Nina Jiang, Lea Kwok, Lindsay Phung
APCS pd7
HW101 -- Heap o'Trouble / intro to heap... algo for adding and removing methods
         for minheap
2022-05-17t
time spent: 1 hrs

* newNode = node inserted

1. Start at the root, comparing the value of the newNode to the value of the root.
--------- CASE 1: NO CHILDREN ---------------------------------------------------
2. If the root has no children, then we insert newNode as the left child of the
   root.
--------- CASE 2: ONE CHILD ---------------------------------------------------
3. If newNode's value is greater than the root's value, we compare newNode to the
   (if exists) child of the root.
   - If newNode's value is smaller, then we make newNode the left child and call
     insertion() for the nodes that have been "cut off".

--------- CASE 3: TWO CHILDREN ---------------------------------------------------
- If newNode's value is bigger than the left child, we also check if newNode's
  value is bigger than the right child. If so, we go down each level comparing
  a node's value with newNode's value until we reach a node that has a bigger
  value than newNode. If so, insert here.
4. If newNode's value is smaller than the left child's value, we look at the (if
   exists) right child of the root. If so, we go down each level comparing a node's
   value with newNode's value until we reach a node that has a bigger value than
   newNode. If so, insert here.
